Create a Partial View for Cart Items
Letâ€™s name the partial view _CartItemsPartial.cshtml.

cshtml
Copy code
@model IEnumerable<CartItemViewModel> <!-- Replace with your model -->

@foreach (var item in Model)
{
    <div class="row align-items-center mb-4 cart-item">
        <div class="col-3">
            <img src="@item.ImageUrl" class="img-fluid rounded cart-img" alt="@item.Name">
        </div>
        <div class="col-6">
            <h6 class="fw-semibold">@item.Name</h6>
            <p class="mb-1 text-muted">Brand: @item.Brand</p>
            <p class="mb-1">Price: â‚¹@item.UnitPrice</p>
            <div class="d-flex align-items-center mt-2">
                <label class="me-2 mb-0">Qty:</label>
                <input type="number" class="form-control qty-input" min="1" value="@item.Quantity" data-itemid="@item.ProductId" />
            </div>
        </div>
        <div class="col-3 text-end">
            <p class="mb-1 fw-semibold item-total">â‚¹@(item.UnitPrice * item.Quantity)</p>
            <i class="bi bi-trash remove-btn" data-itemid="@item.ProductId"></i>
        </div>
    </div>
    <hr />
}
ðŸ”¹ 2. Controller Action to Serve Cart Items
csharp
Copy code
public IActionResult LoadCartItems(int page = 1, int pageSize = 5)
{
    var cartItems = _cartService.GetCartItems(UserId); // Get from DB
    var pagedItems = cartItems.Skip((page - 1) * pageSize).Take(pageSize).ToList();

    return PartialView("_CartItemsPartial", pagedItems);
}
ðŸ”¹ 3. Render Partial in Main Cart View
In your main view Cart.cshtml:

html
Copy code
<div id="cartItemsContainer" class="card p-3 shadow-sm"></div>
<div class="text-center mt-3">
    <button id="loadMoreBtn" class="btn btn-outline-primary">Load More</button>
</div>
ðŸ”¹ 4. JavaScript for Lazy Loading
javascript
Copy code
let cartPage = 1;
const pageSize = 5;

function loadCartItems() {
    $.ajax({
        url: '/Cart/LoadCartItems',
        data: { page: cartPage, pageSize: pageSize },
        type: 'GET',
        success: function (html) {
            $('#cartItemsContainer').append(html);
            cartPage++;
            updateCartSummary(); // Optional: recalculate total
        },
        error: function () {
            alert("Failed to load cart items.");
        }
    });
}

$(document).ready(function () {
    loadCartItems(); // Load first page

    $('#loadMoreBtn').on('click', function () {
        loadCartItems();
    });

    // Handle quantity change
    $(document).on('input', '.qty-input', function () {
        const quantity = parseInt($(this).val());
        const price = parseFloat($(this).closest('.cart-item').find('p.mb-1:contains("Price")').text().replace(/[^\d.]/g, ''));
        const totalElement = $(this).closest('.cart-item').find('.item-total');
        totalElement.text(`â‚¹${(price * quantity).toFixed(2)}`);
        updateCartSummary();
    });

    // Remove item
    $(document).on('click', '.remove-btn', function () {
        const itemId = $(this).data("itemid");
        $(this).closest('.cart-item').next("hr").remove(); // remove HR
        $(this).closest('.cart-item').remove(); // remove item
        updateCartSummary();

        $.post('/Cart/RemoveItem', { itemId: itemId }); // Your API
    });
});
ðŸ”¹ 5. JavaScript to Update Summary Dynamically
javascript
Copy code
function updateCartSummary() {
    let total = 0;
    let count = 0;

    $('.cart-item').each(function () {
        const priceText = $(this).find('.item-total').text().replace(/[^\d.]/g, '');
        const price = parseFloat(priceText);
        if (!isNaN(price)) {
            total += price;
            count++;
        }
    });

    $('.summary-item-count').text(`Items (${count})`);
    $('.summary-total-price').text(`â‚¹${total.toFixed(2)}`);
}
ðŸ”¹ 6. Update Order Summary Section
Replace with:

html
Copy code
<div class="card p-4 shadow-sm">
    <h5 class="mb-3">Order Summary</h5>
    <div class="d-flex justify-content-between">
        <p class="summary-item-count">Items (0)</p>
        <p class="summary-total-price">â‚¹0</p>
    </div>
    <div class="d-flex justify-content-between">
        <p>Delivery</p>
        <p>Free</p>
    </div>
    <hr>
    <div class="d-flex justify-content-between fw-bold">
        <p>Total</p>
        <p class="summary-total-price">â‚¹0</p>
    </div>
    <button class="btn btn-primary w-100 mt-3">Proceed to Checkout</button>
</div>
