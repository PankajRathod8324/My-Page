 public void AddProduct(ProductDTO model, IFormFile MainImage, List<IFormFile> GalleryImages)
    {
        try
        {
            var product = new Product
            {
                Name = model.Name,
                Categoryid = model.Categoryid,
                Price = model.Price,
                Details = model.Details,
                Active = model.Active,
                Createdby = _userRepository.GetUserByEmail(
                    _httpContextAccessor.HttpContext?.User.FindFirst(ClaimTypes.Email)?.Value)?.Userid ?? 0
            };



            // Handle Main Cover Image
            if (MainImage != null && MainImage.Length > 0)
            {
                var mainImageFileName = Guid.NewGuid().ToString() + "_" + MainImage.FileName;
                var mainImagePath = Path.Combine(_imageFolderPath, mainImageFileName);
                Directory.CreateDirectory(_imageFolderPath);

                using (var stream = new FileStream(mainImagePath, FileMode.Create))
                {
                    MainImage.CopyTo(stream); // use CopyTo instead of CopyToAsync if you're not awaiting
                }


                product.Imagepath = "/images/" + mainImageFileName;


                _productRepository.AddProduct(product);
            }

            // Handle Gallery Images
            if (GalleryImages != null && GalleryImages.Count > 0)
            {
                foreach (var image in GalleryImages)
                {
                    if (image.Length > 0)
                    {
                        var uniqueFileName = Guid.NewGuid().ToString() + "_" + image.FileName;
                        var filePath = Path.Combine(_imageFolderPath, uniqueFileName);

                        Directory.CreateDirectory(_imageFolderPath);

                        using (var stream = new FileStream(filePath, FileMode.Create))
                        {
                            image.CopyTo(stream);
                        }

                        var galleryImage = new Productimage
                        {
                            Productid = product.Productid,
                            Imaegpath = "/images/" + uniqueFileName
                        };

                        _productRepository.AddProductImage(galleryImage);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception("Error adding product: " + ex.Message);
        }
    }
