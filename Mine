$(document).ready(function () {
    loadCartItems();

    $('#loadMoreBtn').on('click', function () {
        loadCartItems();
    });

    // Handle quantity increase
    $(document).on('click', '.qty-increase', function () {
        const itemId = $(this).data("itemid");
        const input = $(`.qty-input[data-itemid="${itemId}"]`);
        let qty = parseInt(input.val()) || 1;
        input.val(qty + 1);
        updateItemTotal(itemId);
        updateCartSummary();
    });

    // Handle quantity decrease
    $(document).on('click', '.qty-decrease', function () {
        const itemId = $(this).data("itemid");
        const input = $(`.qty-input[data-itemid="${itemId}"]`);
        let qty = parseInt(input.val()) || 1;
        if (qty > 1) {
            input.val(qty - 1);
            updateItemTotal(itemId);
            updateCartSummary();
        }
    });

    // Handle remove
    $(document).on("click", ".remove-icon", function (event) {
        event.stopPropagation();
        var cartitemid = $(this).data("cartitemid");
        console.log(cartitemid);
        $.ajax({
            type: "POST",
            url: '/Cart/RemoveFromCart',
            data: { cartitemid: cartitemid },
            success: function (response) {
                if (response.success) {
                    toastr.success('Product Removed From Cart!', "Success");
                    loadCartItems();
                } else {
                    alert("Failed to remove product from cart.");
                }
            },
            error: function (xhr) {
                console.error(xhr);
            }
        });
    });

    // Attach modal open event
    $('[data-bs-target="#orderSummaryModal"]').on('click', updateSummary);

    // Place order
    $('#confirmOrderBtn').on('click', function () {
        const paymentMethod = $('#paymentMethodSelect').val();
        const cartItems = [];

        let totalQty = 0;
        let totalPrice = 0;

        $('.cart-item').each(function () {
            const qty = parseInt($(this).find('.qty-input').val());
            const price = parseFloat($(this).find('.item-total').text().replace(/[^\d.]/g, ''));
            const productId = parseInt($(this).find('.qty-input').data("itemid"));
            const cartItemId = parseInt($(this).find('.remove-icon').data("cartitemid"));

            totalQty += qty;
            totalPrice += price;

            cartItems.push({
                Cartitemid: cartItemId,
                Productid: productId,
                Quantity: qty,
                Price: price
            });
        });

        const orderData = {
            Ordernumber: generateOrderNumber(),
            Totalitems: totalQty,
            Paymentmethod: paymentMethod,
            Orderstatus: "Pending",
            Price: totalPrice,
            Createdby: 1,
            Createdat: new Date().toISOString(),
            CartItems: cartItems
        };

        fetch("/Order/PlaceOrder", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(orderData)
        })
            .then(res => res.ok ? res.json() : Promise.reject(res))
            .then(response => {
                toastr.success("Order placed successfully!", "Success");
                $('#proccedToCheckout').hide();
                window.location.reload();
            })
            .catch(error => {
                console.error("Error placing order:", error);
                alert("Something went wrong.");
            });
    });
});

function updateItemTotal(itemId) {
    const input = $(`.qty-input[data-itemid="${itemId}"]`);
    const qty = parseInt(input.val()) || 1;
    const cartItem = $(`.cart-item[data-productid="${itemId}"]`);
    const price = parseFloat(cartItem.data("price"));
    const total = qty * price;

    cartItem.find('.item-total').text(`₹${total.toFixed(2)}`);
}

function updateCartSummary() {
    let total = 0;
    let count = 0;

    $('.cart-item').each(function () {
        const priceText = $(this).find('.item-total').text().replace(/[^\d.]/g, '');
        const price = parseFloat(priceText);
        const qty = parseInt($(this).find('.qty-input').val()) || 1;
        if (!isNaN(price)) {
            total += price;
            count += qty;
        }
    });

    $('.summary-item-count').text(`Items (${count})`);
    $('.summary-total-price').text(`₹${total.toFixed(2)}`);

    if (count === 0) {
        $('#proccedToCheckout').hide();
    }
}

function updateSummary() {
    let total = 0;
    let items = [];

    $('.cart-item').each(function () {
        const name = $(this).find('h6').text();
        const qty = parseInt($(this).find('.qty-input').val());
        const price = parseFloat($(this).find('.item-total').text().replace(/[^\d.]/g, ''));

        total += price;

        items.push(`<div class="modal-summary-item d-flex justify-content-between">
            <span>${name} (x${qty})</span>
            <span>₹${price.toFixed(2)}</span>
        </div>`);
    });

    $('#orderSummaryBody').html(items.join(''));
    $('#orderSummaryTotal').text(`₹${total.toFixed(2)}`);
}

function loadCartItems() {
    const productId = $('#cartItemsContainer').data('productid');
    $.ajax({
        url: '/Cart/LoadCartItems',
        type: 'GET',
        data: { productId: productId },
        success: function (html) {
            $('#cartItemsContainer').append(html);
            updateCartSummary();
        },
        error: function () {
            alert("Failed to load cart items.");
        }
    });
}

function generateOrderNumber() {
    return 'ORD' + Date.now();
}
<div class="cart-item" data-productid="@item.Productid" data-price="@item.Price">
<button class="qty-increase" data-itemid="@item.Productid">+</button>
<button class="qty-decrease" data-itemid="@item.Productid">−</button>
