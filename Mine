Frontend Changes (Prepare Array with OrderId, ItemId, Quantity)
javascript
Copy code
<script>
    $(document).ready(function () {
        $('.prepareitem').submit(function (e) {
            e.preventDefault();

            var prepare = [];

            let orderId = $(this).data('orderid');   // orderId from form attribute
            let items = $(this).find('.form-check-input:checked');

            if (items.length == 0) {
                alert('Please select at least one item.');
                return;
            }

            items.each(function (index) {
                let itemId = $(this).val();
                let quantity = $(this).closest('span').find('.qty-input').val();
                
                prepare.push({
                    orderId: orderId,
                    itemId: itemId,
                    quantity: quantity
                });
            });

            console.log(prepare);

            $.ajax({
                type: "POST",
                url: '/YourController/PrepareItem', 
                data: JSON.stringify(prepare),
                contentType: "application/json",
                success: function (response) {
                    alert(response.message);
                }
            });
        });
    });
</script>
2. Controller Method
csharp
Copy code
[HttpPost]
public IActionResult PrepareItem([FromBody] List<PrepareItemVM> prepareItems)
{
    var response = _yourService.PrepareItem(prepareItems);
    return Json(new { message = response });
}
3. ViewModel
csharp
Copy code
public class PrepareItemVM
{
    public int OrderId { get; set; }
    public int ItemId { get; set; }
    public int Quantity { get; set; }
}
4. Service Layer
csharp
Copy code
public string PrepareItem(List<PrepareItemVM> prepareItems)
{
    foreach (var item in prepareItems)
    {
        var orderItem = _context.OrderItems
            .FirstOrDefault(x => x.OrderId == item.OrderId && x.ItemId == item.ItemId);

        if (orderItem != null)
        {
            orderItem.Readyitemquantity += item.Quantity;
        }
    }

    _context.SaveChanges();

    return "Items Prepared Successfully";
}
5. Razor View Change in Form Tag
html
Copy code
<form class="prepareitem" data-orderid="@Model.FirstOrDefault().OrderId">
Result:
