@using System.Security.Claims
@model Entities.ViewModels.ProductDTO
@{
    var role = User.FindFirst(ClaimTypes.Role)?.Value;
}

<div class=" mt-4">
    <div class="row g-4">
        <div class="col-md-6">
            <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-indicators">
                    @for (var item = 0; item < @Model.Image.Count; item++)
                    {
                        <button type="button" data-bs-target="#productCarousel" data-bs-slide-to="@item"
                            class="@(item == 0 ? "active" : "")" aria-current="@(item == 0 ? "true" : "")"
                            aria-label="Slide @item"></button>
                    }
                </div>
                  <div class="carousel-inner">
                            @foreach (var item in Model.Image)
                            {
                                    <div class="carousel-item @(Model.Image.IndexOf(item) == 0 ? "active" : "")">
                                            <img class="d-block zoomImage w-100 img-fluid" 
                                 src="@item.Imaegpath" data-zoom-image="@item.Imaegpath" 
                                       alt="Product Image" style="max-height: 500px; object-fit: contain;" />
                                        </div>
                            }
                        </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel"
                    data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productCarousel"
                    data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>
            </div>
        </div>

        <div class="col-md-5">
             <div class="d-flex justify-content-between align-items-center">
                 <h2>@Model.Name</h2>
                 
                <div class="fs-3">
                    @if (Model.IsInWishlist == true)
                    {
                        <i class="bi bi-heart-fill removetowishlist" style="color: rgba(0, 102, 167, 1);" data-productid="@Model.Productid" data-flag="remove"></i>
                    }
                    else
                    {
                        <i class="bi bi-heart addtowishlist" data-productid="@Model.Productid" data-flag="add"></i>
                    }  
                </div>
            </div>
             <p class="text-muted">@Model.CategoryName</p>
           
           
          
            <h4 class="text-success">â‚¹@Model.Price</h4>
            <p><strong>Description:</strong></p>
            <p>@Model.Details</p>
            @if(role == "Users")
            {
                  <button type="btn" id="addcardbtn" class="col-md-6 mt-3 mb-1 btn finalcancelbtn btn-lg  text-center" data-productid="@Model.Productid">
                            ADD TO CART
                </button>
                
                <a asp-action="Cart" asp-controller="Home" asp-route-productId="@Model.Productid" style="text-decoration: none;">
                <button type="btn"  id="buyitnowbtn"  class="col-md-6 mt-3 mb-1 btn finalsavebtn btn-lg  text-center" data-productid="@Model.Productid">
                            BUY IT NOW
                </button>
                </a>
                
            }
            
           
        </div>
        <div class="col-md-1">
            <a class="btn finalcancelbtn" asp-area="" asp-controller="Home" asp-action="Product"
                style=" background-color: rgb(245, 245, 245) !important;">
                <i class="fa-solid fa-chevron-left"></i> Back
            </a>
        </div>

    </div>
</div>in here how can i add that and i am here want the logic also it should look good okay give me perfect and best ui and backend logic also  public ProductDTO GetProductById(int productId)
    {
        Product product = _productRepository.GetProductById(productId);
        if (product == null) return null!;

        string? useremail = _httpContextAccessor.HttpContext?.User?.FindFirst(ClaimTypes.Email)?.Value;
        User user = _userRepository.GetUserByEmail(useremail);
        if (user == null) throw new Exception("User not found.");

        Category? category = product.Categoryid.HasValue
            ? _categoryRepository.GetCategoryById(product.Categoryid.Value)
            : null;

        List<Productimage> productImages = _productRepository.GetProductimagesByProductId(product.Productid);

        return new ProductDTO
        {
            Productid = product.Productid,
            Categoryid = product.Categoryid,
            Name = product.Name,
            CategoryName = category?.Name ?? "Unknown",
            Image = productImages ?? new List<Productimage>(),
            Images = product.Imagepath,
            Active = product.Active,
            Price = product.Price,
            Details = product.Details,
            Createdat = product.Createdat,
            Modifiedat = product.Modifiedat,
            Deleted = product.Deleted,
            IsInWishlist = _productRepository.IsProductIntoWishlist(product.Productid, user.Userid)
        };
    }
these is how my Product
 
IsReturnable - Bool
ProductReturnPolicy
-ProductId 
-Name 
-Description
-ReturnDays
 schema so i have to check that there is Isreturnable true then i need add that details in that view part ok ay give me complete logic
