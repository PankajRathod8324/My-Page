@model DAL.ViewModel.MenuCategoryVM

@{
    Layout = "_LayoutOrder";
    ViewData["Title"] = "Table View";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pizza Shop</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body style="background-color: rgb(245,245,245);">
    <div style="padding-top: 100px; padding-left: 50px; padding-right: 50px;">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <div class="fs-2 fw-bold webybtn mb-3">KOT</div>
                </div>
            </div>
        </div>

        <!-- Bootstrap Tabs -->
        <ul class="nav nav-tabss border-0 bg-white p-3 pt-2 pb-0 rounded-3" id="categoryTabs">
            <li class="nav-item">
                <a class="nav-link active text-primary border-bottom border-primary fs-5 fw-bold" data-category="All"
                    onclick="showCategory('All')">All</a>
            </li>
            @foreach (var category in Model.menuCategories)
            {
                <li class="nav-item">
                    <a class="nav-link categoryBtn text-nav-color fs-5 fw-bold" data-category="@category.CategoryId"
                        onclick="showCategory('@category.CategoryId')">@category.CategoryName</a>
                </li>
            }
        </ul>

        <!-- Tab Content -->
        <div class="tab-content mt-3 bg-white" id="categoryTabContent">
            <div class="category-content" id="All">
                @foreach (var category in Model.menuCategories)
                {
                    <div class="card border-primary mb-3 d-inline-block" style="max-width: 18rem; margin: 10px;">
                        <div class="card-header bg-transparent border-primary">@category.CategoryName</div>
                        <div class="card-body text-primary">
                            <h5 class="card-title">@category.CategoryName</h5>
                            <p class="card-text">Items for @category.CategoryName category.</p>
                        </div>
                        <div class="card-footer bg-transparent border-primary">Footer</div>
                    </div>
                }
            </div>

            <!-- Placeholder for Partial View -->
            <div class="category-content" id="kotcard"></div>
        </div>
    </div>
</body>

<script>
    function showCategory(categoryId) {
        // Hide all category contents
        $(".category-content").hide();

        if (categoryId === "All") {
            $("#All").show();
        } else {
            $.ajax({
                url: '@Url.Action("GetKOT", "AccountManagerOrderApp")',
                type: 'GET',
                data: { categoryId: categoryId },
                success: function (data) {
                    console.log("Category items fetched successfully:", data);
                    $('#kotcard').html(data);
                    $('#kotcard').find('.category-content').show();  // Ensure newly added content is visible
                    $('#kotcard').show();
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching category items:", error);
                }
            });
        }

        // Remove active styles from all tabs
        $(".nav-link").removeClass("text-primary border-bottom border-primary").addClass("text-nav-color");

        // Add active styles to the selected tab
        $(`[data-category="${categoryId}"]`).addClass("text-primary border-bottom border-primary").removeClass("text-nav-color");
    }
</script>

</html>in this for perticuler category it is working but in all category i wna that all category i can see and that running and in progress sttua also working and that previous and next btn is for ctegory and write according to that 
    public List<OrderCategoryVM> GetOrderCategoryItem(int categoryId)
    {
        var categoryData = _context.MenuCategories
            .Where(c => c.CategoryId == categoryId)
            .Select(c => new OrderCategoryVM
            {
                CategoryId = c.CategoryId,
                CategoryName = c.CategoryName,
                Orders = _context.Orders
                    .Where(o => _context.OrderItems.Any(oi => oi.OrderId == o.OrderId && oi.ItemId.HasValue
                                                              && _context.MenuItems.Any(mi => mi.ItemId == oi.ItemId
                                                                                          && mi.CategoryId == categoryId)))
                    .Select(o => new OrderVM
                    {
                        OrderId = o.OrderId,
                        OccupiedTime = DateTime.Now - o.CreatedAt,
                        OrderInstruction = o.OrderInstructions,
                        OrderItems = _context.OrderItems
                            .Where(oi => oi.OrderId == o.OrderId && oi.ItemId.HasValue
                                         && _context.MenuItems.Any(mi => mi.ItemId == oi.ItemId
                                                                     && mi.CategoryId == categoryId))
                            .Select(oi => new OrderItemVM
                            {
                                ItemId = (int)oi.ItemId,
                                ItemName = oi.ItemId.HasValue ? _context.MenuItems
                                    .Where(item => item.ItemId == oi.ItemId)
                                    .Select(item => item.ItemName)
                                    .FirstOrDefault() : "No Item",
                                Price = oi.Rate,
                                Modifiers = _context.OrderModifiers
                                    .Where(om => om.OrderItemId == oi.OrderItemId && om.ItemId == oi.ItemId)
                                    .Select(om => new OrderModifierVM
                                    {
                                        ModifierId = (int)om.ModifierId,
                                        ModifierName = om.ModifierId.HasValue ? _context.MenuModifiers
                                            .Where(modifier => modifier.ModifierId == om.ModifierId)
                                            .Select(modifier => modifier.ModifierName)
                                            .FirstOrDefault() : "No Modifier",
                                        ModifierRate = om.Rate,
                                        Quantity = om.Quantity
                                    }).ToList(),
                                Quantity = oi.Quantity,
                                ItemInstructions = oi.ItemInstructions,
                            }).ToList(),
                        OrderTables = _context.OrderTables.Where(r => r.OrderId == o.OrderId).Select(ot => new OrderTableVM
                        {
                            TableId = (int)ot.TableId,
                            TableName = ot.TableId.HasValue ? (from table in _context.Tables
                                                               where table.TableId == ot.TableId
                                                               select table.TableName).FirstOrDefault() : "No Table",
                            SectionName = ot.TableId.HasValue ? (from table in _context.Tables
                                                                 join section in _context.Sections on table.SectionId equals section.SectionId
                                                                 where table.TableId == ot.TableId
                                                                 select section.SectionName).FirstOrDefault() : "No Section"
                        }).ToList(),
                    }).ToList(), // Ensure distinct orders

            }).ToList();

        return categoryData;
    }
