@model List<Entities.ViewModels.OrderDTO>

<div class="container py-4">
    <h2 class="text-center mb-4 text-primary fw-bold">Manage Customer Orders</h2>

    @if (Model.Any())
    {
        <div class="row g-4">
            @foreach (var order in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card shadow-sm rounded-4 h-100">
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between mb-2">
                                <h6 class="text-muted">Order #<span class="fw-bold text-dark">@order.Ordernumber</span></h6>
                                <span class="badge bg-light text-dark">@order.Createdat.ToString("dd MMM yyyy")</span>
                            </div>

                            <p class="mb-1 text-muted">Customer: <span class="fw-semibold">@order.Createdby</span></p>
                            <p class="mb-1 text-muted">Payment: <span class="fw-semibold">@order.Paymentmethod</span></p>
                            <p class="mb-2 text-muted">Total Items: <span class="fw-semibold">@order.Totalitems</span></p>

                            <div class="border rounded bg-light p-2 mb-2">
                                <h6 class="fw-bold">Items:</h6>
                                <ul class="list-unstyled small mb-0">
                                    @foreach (var item in order.Orderitems)
                                    {
                                        <li class="mb-1">@item.Product?.Name (x@item.Quantity) - ₹@item.Price</li>
                                    }
                                </ul>
                            </div>

                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <div>
                                    <span class="fw-bold">Total: ₹@order.Orderitems.Sum(i => i.Price * i.Quantity)</span>
                                </div>

                                <div class="ms-2">
                                    @if (order.Orderstatus == "Completed")
                                    {
                                        <span class="badge bg-success px-3 py-1">Completed</span>
                                    }
                                    else
                                    {
                                        <select class="form-select form-select-sm order-status" data-orderid="@order.Orderid">
                                            <option value="Pending" selected="@(order.Orderstatus == "Pending")">Pending</option>
                                            <option value="Processing" selected="@(order.Orderstatus == "Processing")">Processing</option>
                                            <option value="Completed" selected="@(order.Orderstatus == "Completed")">Completed</option>
                                            <option value="Cancelled" selected="@(order.Orderstatus == "Cancelled")">Cancelled</option>
                                        </select>
                                    }
                                </div>

                                <div class="ms-2">
                                    <button class="btn btn-outline-primary btn-sm update-status-btn" data-orderid="@order.Orderid">
                                        <i class="fas fa-save"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info text-center">
            No orders found.
        </div>
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.update-status-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const orderId = this.getAttribute('data-orderid');
                const selectedStatus = document.querySelector(`.order-status[data-orderid="${orderId}"]`).value;

                fetch(`/Order/UpdateOrderStatus`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId, Orderstatus: selectedStatus })
                })
                .then(res => res.ok ? res.json() : Promise.reject(res))
                .then(data => {
                    alert("Status updated successfully!");
                    location.reload();
                })
                .catch(err => {
                    alert("Error updating order status.");
                    console.error(err);
                });
            });
        });
    </script>
}
