Task Document: Notification System – Database Design
🎯 Objective:
Design and implement a notification system using two database tables:
NotificationTypes – Stores master data for all predefined system notifications.
UserNotifications – Manages user-specific notification entries and their read/unread status.
✅ Task Breakdown
1. Master Table: NotificationTypes
Purpose: Define and store the static notification configurations used throughout the system.
Fields:
Id – Primary key
NotificationCode – Unique identifier (e.g., 1 = Order Placed, 2 = Order Confirmed, 3 = Order Shipped)
Title – Title of the notification
Message – Message body/content of the notification
CreatedAt – Timestamp when the record was created
UpdatedAt – Timestamp when the record was last modified
Note: This table will be seeded with predefined values representing system-triggered notifications.
2. Transaction Table: UserNotifications
Purpose: Track individual notifications sent to users, including their read status.
Fields:
Id – Primary key
UserId – Identifier of the user receiving the notification
NotificationTypeId – Foreign key linking to NotificationTypes
IsRead – Boolean flag (false by default) indicating whether the notification has been read
CreatedAt – Timestamp when the notification was generated
UpdatedAt – Timestamp when the record was last updated
🛠️ Functional Requirements
Unread Notification Count
Display the number of unread notifications for the logged-in user on the UI.
Mark All as Read
Provide an option for users to mark all their unread notifications as read in a single action.
📌 Deliverables
Database schema for NotificationTypes and UserNotifications
Backend services to:
Retrieve unread notification count
List user notifications
Mark notifications as read (individually or in bulk)
Frontend integration to:
Display unread count
Trigger mark-as-read operations
Sample Data:
Notification Type	Title	Message
1 – Order Placed	Order Placed @OrderNo@	Your order has been placed successfully.
2 – Order Confirmed	Order Confirmed @OrderNo@	Your order has been confirmed.
3 – Order Shipped	Order Shipped @OrderNo@	Your order has been shipped. when order plced then triggered that trigger and the notifictaion frontend here   <div class="m-2 fs-3 me-3">
                <i class="bi bi-bell" style="color: white;"></i>
            </div> give me complete code 
