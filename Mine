<div class="col d-flex flex-wrap justify-content-end gap-3 align-items-end">

    <!-- Category Filter -->
    <div class="form-group" style="max-width: 200px;">
        <select class="form-select modal-field" id="filter" name="filter" asp-for="Categoryid"
                asp-items="ViewBag.Categories" aria-label="Select Category" style="height: 60px;">
        </select>
    </div>

    <!-- Price Range -->
    <div class="bg-white px-3 py-2 rounded border shadow-sm" style="max-width: 300px; min-height: 60px;">
        <div class="d-flex justify-content-between mb-1">
            <small class="fw-semibold text-muted">Price Range (₹)</small>
            <small class="text-muted">Min: ₹<span id="minValueText">0</span> — Max: ₹<span id="maxValueText">200000</span></small>
        </div>

        <div class="d-flex align-items-center gap-2">
            <input type="range" class="form-range" id="minPrice" min="0" max="200000" step="1000" value="0" style="flex: 1;">
            <input type="range" class="form-range" id="maxPrice" min="0" max="200000" step="1000" value="200000" style="flex: 1;">
        </div>
    </div>

</div>
public IEnumerable<ProductVM> GetAllPaged(int page, int pageSize)
{
    return _db.Products
              .Where(p => p.Active)
              .OrderBy(p => p.Productid)
              .Skip((page - 1) * pageSize)
              .Take(pageSize)
              .Select(p => new ProductVM {
                  Name = p.Name,
                  Images = p.Images,
                  CategoryName = p.Category.Name,
                  Price = p.Price
              }).ToList();
}
@{
    ViewBag.Title = "All Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int initialPage = 1;
}
<div class="container my-4">
    <div class="row" id="productContainer">
        @await Html.PartialAsync("_ProductCardsPartial", Model)
    </div>

    <div id="loading" class="text-center mt-4" style="display:none;">
        <span class="spinner-border text-primary" role="status"></span>
        <p>Loading more products...</p>
    </div>
</div>

@section Scripts {
    <script>
        let page = @initialPage + 1;
        let isLoading = false;

        window.onscroll = function () {
            if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100 && !isLoading) {
                isLoading = true;
                document.getElementById("loading").style.display = "block";

                $.ajax({
                    url: '/Product/LoadMoreProducts?page=' + page,
                    type: 'GET',
                    success: function (data) {
                        if (data.trim() !== "") {
                            $('#productContainer').append(data);
                            page++;
                            isLoading = false;
                            document.getElementById("loading").style.display = "none";
                        } else {
                            $('#loading').html('<p class="text-muted">No more products to load.</p>');
                        }
                    },
                    error: function () {
                        $('#loading').html('<p class="text-danger">Error loading products.</p>');
                    }
                });
            }
        };
    </script>
}
@model IEnumerable<ProductVM>

@foreach (var product in Model)
{
    <div class="col-md-3 mb-4">
        <div class="card h-100 shadow-sm">
            <img src="@product.Images" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
            <div class="card-body">
                <h5 class="card-title">@product.Name</h5>
                <p class="card-text">₹@product.Price</p>
                <p class="text-muted">@product.CategoryName</p>
            </div>
        </div>
    </div>
}
public IActionResult LoadMoreProducts(int page = 1, int pageSize = 12)
{
    var products = _productService.GetAllPaged(page, pageSize); // Paged data
    return PartialView("_ProductCardsPartial", products);
}
