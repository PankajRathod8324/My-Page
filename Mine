public DashboardDTO GetDashboard()
{
    int totalUsers = _userRepository.GetTotalUserCount();
    int activeUsers = _userRepository.GetUserCountByStatus(true);
    int inactiveUsers = _userRepository.GetUserCountByStatus(false);

    int totalProducts = _productRepository.GetTotalProductCount();
    int totalCategories = _categoryRepository.GetTotalCategoryCount();

    var categoryData = _categoryRepository.GetCategoryProductCounts();

    return new DashboardDTO
    {
        TotalUsers = totalUsers,
        ActiveUsers = activeUsers,
        InactiveUsers = inactiveUsers,
        TotalProducts = totalProducts,
        TotalCategories = totalCategories,
        CategoryNames = categoryData.Select(d => d.Name).ToList(),
        CategoryCounts = categoryData.Select(d => d.Count).ToList()
    };
}
public int GetTotalUserCount()
{
    return _context.Users.Count();
}

public int GetUserCountByStatus(bool isActive)
{
    return _context.Users.Count(u => u.IsActive == isActive);
}
public int GetTotalProductCount()
{
    return _context.Products.Count();
}
public int GetTotalCategoryCount()
{
    return _context.Categories.Count();
}

public List<CategoryProductCountDTO> GetCategoryProductCounts()
{
    return _context.Categories
        .Select(c => new CategoryProductCountDTO
        {
            Name = c.Name,
            Count = _context.Products.Count(p => p.Categoryid == c.Categoryid)
        }).ToList();
}
