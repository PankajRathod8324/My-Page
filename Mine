Modify the user-side section (in your code):
Replace:

csharp
Copy code
@await Html.PartialAsync("_ProductCardsPartial", Model)
With:

html
Copy code
<div class="row" id="productContainer">
    @await Html.PartialAsync("_ProductCardsPartial", Model)
</div>
<div class="text-center mt-3" id="loadingSpinner" style="display:none;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>
<input type="hidden" id="currentPage" value="@Model.PageNumber" />
<input type="hidden" id="totalPages" value="@Model.PageCount" />
✅ 2. Add JavaScript for infinite scroll:
html
Copy code
@section Scripts {
<script>
    let isLoading = false;

    $(window).on('scroll', function () {
        if (isLoading) return;

        const scrollTop = $(this).scrollTop();
        const scrollHeight = $(document).height();
        const clientHeight = $(this).height();

        if (scrollTop + clientHeight >= scrollHeight - 100) {
            let currentPage = parseInt($('#currentPage').val());
            let totalPages = parseInt($('#totalPages').val());

            if (currentPage < totalPages) {
                loadMoreProducts(currentPage + 1);
            }
        }
    });

    function loadMoreProducts(page) {
        isLoading = true;
        $('#loadingSpinner').show();

        $.get('@Url.Action("UserProductListPartial", "Product")', { page: page }, function (data) {
            $('#productContainer').append(data);
            $('#currentPage').val(page);
            $('#loadingSpinner').hide();
            isLoading = false;
        });
    }
</script>
}
