@using System.Security.Claims
@model Entities.ViewModels.ProductDTO
@{
    Layout = "_Layout";
    ViewData["Title"] = "Category Page";
    var role = User.FindFirst(ClaimTypes.Role)?.Value;
}


  <link rel="stylesheet" href="~/css/wishlist.css" asp-append-version="true" />

  <div class="wishlist-container">
    <div class="wishlist-header">
      <div><i class="far fa-heart"></i></div>
      <h2>My Wishlist</h2>
    </div>
    <div id="WishlistTable" class="bg-white p-4"></div>
  
  </div>




@section Scripts {
    <script src="~/js/wishlist.js" asp-append-version="true"></script>
}

these is css code 
body {
    background-color: #f9f9f9;
    font-family: 'Segoe UI', sans-serif;
  }

  .wishlist-container {
    max-width: 1000px;
    margin: 40px auto;
    background-color: #fff;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.05);
  }

  .wishlist-header {
    text-align: center;
    margin-bottom: 30px;
  }

  .wishlist-header h2 {
    font-size: 32px;
    font-weight: bold;
  }

  .wishlist-header i {
    font-size: 32px;
    color: #555;
  }

  .wishlist-table th {
    color: #333;
    font-weight: 600;
    font-size: 16px;
  }

  .product-img {
    width: 60px;
    height: auto;
    border-radius: 5px;
  }

  .price-old {
    text-decoration: line-through;
    color: #999;
    margin-right: 5px;
  }

  .price-new {
    color: #c4a300;
    font-weight: 600;
  }

  .btn-add {
    background-color: #3c9;
    color: white;
  }

  .btn-add:hover {
    background-color: #34b88a;
  }

  .remove-icon {
    color: #888;
    cursor: pointer;
  }

  .remove-icon:hover {
    color: #e74c3c;
  }

   @media (max-width: 768px) {
    .wishlist-table thead {
      display: none;
    }

    .wishlist-table tr {
      display: block;
      margin-bottom: 20px;
      border: 1px solid #eee;
      padding: 10px;
      border-radius: 8px;
    }

    .wishlist-table td {
      display: flex;
      justify-content: space-between;
      padding: 5px 0;
    }

    .wishlist-table td::before {
      content: attr(data-label);
      font-weight: bold;
    }
  } 

these is my wishlist.cs and these is 
my ajax where i call 
function loadWishlist(pageNumber) {
    var pageSize = $("#pageSizeDropdown").val();
    $.ajax({
        url: '/Product/GetWishlist',
        type: 'GET',
        data: {
            page: pageNumber,
            pageSize: pageSize
        },
        success: function (data) {
            $("#WishlistTable").html(data);
        },
        error: function (xhr, status, error) {
            console.error('Error fetching items:', error);
        }
    });

}
these ius controller 
public IActionResult GetWishlist(PaginationOptions filterOptions)
    {
        filterOptions.Page ??= 1;
        filterOptions.PageSize = filterOptions.PageSize != 0 ? filterOptions.PageSize : 10;

        ViewBag.PageSize = filterOptions.PageSize;
        var products = _productService.GetWishlist(filterOptions);
        return PartialView("_Wishlist", products);

    }

thsese is service 

public IPagedList<ProductDTO> GetWishlist(PaginationOptions filterOptions)
    {
        string useremail = _httpContextAccessor.HttpContext?.User?.FindFirst(ClaimTypes.Email)?.Value;
        var user = _userRepository.GetUserByEmail(useremail);
        IQueryable<Wishlist> products = _productRepository.GetWishlist(user.Userid).AsQueryable();
        int totalProduct = products.Count();
        int pageSize = filterOptions.PageSize > 0 ? Math.Min(filterOptions.PageSize, totalProduct) : 10;
          IPagedList<ProductDTO> paginatedProducts = products
           .Select(product => new ProductDTO
           {
               Wishlistid = product.Wishlistid,
               Productid = (int)product.Productid,
               Name = _productRepository.GetProductById((int)product.Productid).Name,
               Images = _productRepository.GetProductById((int)product.Productid).Imagepath,
               Categoryid = _productRepository.GetProductById((int)product.Productid).Categoryid,
               CategoryName = _productRepository.GetProductById(_productRepository.GetProductById((int)product.Productid).Productid).Categoryid != null && _categoryRepository.GetCategoryById((int)_productRepository.GetProductById((int)product.Productid).Categoryid) != null
                    ? _categoryRepository.GetCategoryById((int)_productRepository.GetProductById((int)product.Productid).Categoryid).Name
                    : "Unknown",
               Price = _productRepository.GetProductById((int)product.Productid).Price,
               Details = _productRepository.GetProductById((int)product.Productid).Details,
               Active = _productRepository.GetProductById((int)product.Productid).Active,
               Createdat = product.Createdat,
               IsInWishlist = _productRepository.IsProductIntoWishlist(_productRepository.GetProductById((int)product.Productid).Productid, user.Userid)
           }).ToPagedList(filterOptions.Page ?? 1, filterOptions.PageSize > 0 ? filterOptions.PageSize : 10);
        return paginatedProducts;
    }

thsees is repo  public List<Wishlist> GetWishlist(int userId)
    {
        try
        {
            return _context.Wishlists.Where(w => w.Userid == userId).ToList();
        }
        catch (Exception ex)
        {
            throw new Exception("Error getting wishlist: " + ex.Message);
        }
    } so here i want that for e commerce it is very bad to show the pagination and in table form the wishlist item so just change the ui and make lazy loading like all amzone and other e-commerce website has and according to give me all required code with szero error 
