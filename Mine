$(document).on("click", ".ModifierCard", function () {
    var modId = $(this).data("modid");
    var groupId = $(this).data("groupid"); // Get Modifier Group Id
    var min = $(this).data('min');
    var max = $(this).data('max');
    let Highlight = true;

    const existingItemIndex = ItemDetailsArray.findIndex(item => item.ItemId === ItemIdTemp);

    if (existingItemIndex !== -1) {
        let existingModifiers = ItemDetailsArray[existingItemIndex].MenuItemModifier || [];

        // Group-wise selected count
        let groupModifiers = existingModifiers.filter(mod => mod.ModifierGroupId === groupId);

        if ($(this).hasClass("selected")) {
            // Remove from the array
            existingModifiers = existingModifiers.filter(mod => mod.ModifierId !== modId);
        } else {
            if (groupModifiers.length < max) {
                // Add only if group limit not reached
                existingModifiers.push({ ModifierId: modId, ModifierGroupId: groupId });
            } else {
                Highlight = false;
                alert("You can't select more than " + max + " options in this group.");
            }
        }

        // Remove duplicates
        const mergedModifiers = [];
        const ids = new Set();
        existingModifiers.forEach(mod => {
            if (!ids.has(mod.ModifierId)) {
                ids.add(mod.ModifierId);
                mergedModifiers.push(mod);
            }
        });

        ItemDetailsArray[existingItemIndex].MenuItemModifier = mergedModifiers;
    } else {
        // New item push
        ItemDetailsArray.push({
            ItemId: ItemIdTemp,
            MenuItemModifier: [{ ModifierId: modId, ModifierGroupId: groupId }]
        });
    }

    console.log(ItemDetailsArray);

    // Toggle styles only if allowed
    if (Highlight == true) {
        $(this).toggleClass("selected border-primary bg-primary-subtle");
        console.log("Highlight: " + Highlight);
    }
});
