<form id="filterForm" class="row mb-4">
    <!-- Category Dropdown -->
    <div class="col-md-3">
        <select class="form-select" name="CategoryId">
            <option value="">All Categories</option>
            @foreach (var category in ViewBag.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </select>
    </div>

    <!-- Price Range -->
    <div class="col-md-3">
        <input type="number" name="MinPrice" class="form-control" placeholder="Min Price" />
    </div>
    <div class="col-md-3">
        <input type="number" name="MaxPrice" class="form-control" placeholder="Max Price" />
    </div>

    <!-- Search by Name -->
    <div class="col-md-3">
        <input type="text" name="ProductName" class="form-control" placeholder="Search by Name" />
    </div>

    <div class="col-12 mt-2">
        <button type="submit" class="btn btn-primary">Apply Filters</button>
    </div>
</form>
public IActionResult Products(int? CategoryId, decimal? MinPrice, decimal? MaxPrice, string ProductName)
{
    var products = _context.Products
        .Include(p => p.Category)
        .Where(p => !p.IsDeleted); // Optional

    if (CategoryId.HasValue)
        products = products.Where(p => p.CategoryId == CategoryId.Value);

    if (MinPrice.HasValue)
        products = products.Where(p => p.Price >= MinPrice.Value);

    if (MaxPrice.HasValue)
        products = products.Where(p => p.Price <= MaxPrice.Value);

    if (!string.IsNullOrEmpty(ProductName))
        products = products.Where(p => p.ProductName.Contains(ProductName));

    ViewBag.Categories = _context.Categories.ToList();

    return View(products.ToList());
}
$("#filterForm").on("submit", function (e) {
    e.preventDefault();
    $.ajax({
        url: '/Product/Products',
        data: $(this).serialize(),
        type: 'GET',
        success: function (result) {
            $("#productList").html($(result).find("#productList").html());
        }
    });
});
