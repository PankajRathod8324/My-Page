Here‚Äôs how you can create an Order Management Page in ASP.NET MVC with the following features:
‚úÖ Display order details (Order ID, Date, Customer, Status, Payment Mode, Rating as Stars, Total Amount, Action).
‚úÖ Action Button: Generates & downloads a PDF with order details.
‚úÖ Export Button: Exports order data to an Excel file & downloads it.

üìÇ Folder Structure
pgsql
Copy code
/OrderManagement
    ‚îú‚îÄ‚îÄ Controllers
    ‚îÇ   ‚îú‚îÄ‚îÄ OrderController.cs
    ‚îú‚îÄ‚îÄ Views
    ‚îÇ   ‚îú‚îÄ‚îÄ Order
    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Index.cshtml
    ‚îú‚îÄ‚îÄ Models
    ‚îÇ   ‚îú‚îÄ‚îÄ Order.cs
    ‚îú‚îÄ‚îÄ wwwroot
    ‚îÇ   ‚îú‚îÄ‚îÄ js
    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ order.js
1Ô∏è‚É£ Order Model (Models/Order.cs)
csharp
Copy code
using System;

namespace YourNamespace.Models
{
    public class Order
    {
        public int Id { get; set; }
        public DateTime Date { get; set; }
        public string Customer { get; set; }
        public string Status { get; set; }
        public string PaymentMode { get; set; }
        public int Rating { get; set; } // Integer stored, converted to stars
        public decimal TotalAmount { get; set; }
    }
}
2Ô∏è‚É£ Controller (Controllers/OrderController.cs)
csharp
Copy code
using iTextSharp.text;
using iTextSharp.text.pdf;
using ClosedXML.Excel;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.IO;
using YourNamespace.Models;

namespace YourNamespace.Controllers
{
    public class OrderController : Controller
    {
        // Sample data
        private static readonly List<Order> orders = new List<Order>
        {
            new Order { Id = 1, Date = DateTime.Now, Customer = "John Doe", Status = "Completed", PaymentMode = "Credit Card", Rating = 4, TotalAmount = 150.75M },
            new Order { Id = 2, Date = DateTime.Now, Customer = "Jane Smith", Status = "Pending", PaymentMode = "PayPal", Rating = 5, TotalAmount = 220.00M },
        };

        public IActionResult Index()
        {
            return View(orders);
        }

        // Generate PDF for specific order
        public IActionResult DownloadPDF(int id)
        {
            var order = orders.Find(o => o.Id == id);
            if (order == null) return NotFound();

            using (MemoryStream ms = new MemoryStream())
            {
                Document document = new Document();
                PdfWriter.GetInstance(document, ms);
                document.Open();

                document.Add(new Paragraph($"Order ID: {order.Id}"));
                document.Add(new Paragraph($"Date: {order.Date.ToString("yyyy-MM-dd")}"));
                document.Add(new Paragraph($"Customer: {order.Customer}"));
                document.Add(new Paragraph($"Status: {order.Status}"));
                document.Add(new Paragraph($"Payment Mode: {order.PaymentMode}"));
                document.Add(new Paragraph($"Rating: {order.Rating} Stars"));
                document.Add(new Paragraph($"Total Amount: ${order.TotalAmount}"));

                document.Close();
                return File(ms.ToArray(), "application/pdf", $"Order_{order.Id}.pdf");
            }
        }

        // Export all orders to Excel
        public IActionResult ExportToExcel()
        {
            using (var workbook = new XLWorkbook())
            {
                var worksheet = workbook.Worksheets.Add("Orders");
                worksheet.Cell(1, 1).Value = "Order ID";
                worksheet.Cell(1, 2).Value = "Date";
                worksheet.Cell(1, 3).Value = "Customer";
                worksheet.Cell(1, 4).Value = "Status";
                worksheet.Cell(1, 5).Value = "Payment Mode";
                worksheet.Cell(1, 6).Value = "Rating";
                worksheet.Cell(1, 7).Value = "Total Amount";

                for (int i = 0; i < orders.Count; i++)
                {
                    worksheet.Cell(i + 2, 1).Value = orders[i].Id;
                    worksheet.Cell(i + 2, 2).Value = orders[i].Date.ToString("yyyy-MM-dd");
                    worksheet.Cell(i + 2, 3).Value = orders[i].Customer;
                    worksheet.Cell(i + 2, 4).Value = orders[i].Status;
                    worksheet.Cell(i + 2, 5).Value = orders[i].PaymentMode;
                    worksheet.Cell(i + 2, 6).Value = orders[i].Rating;
                    worksheet.Cell(i + 2, 7).Value = orders[i].TotalAmount;
                }

                using (MemoryStream ms = new MemoryStream())
                {
                    workbook.SaveAs(ms);
                    return File(ms.ToArray(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "Orders.xlsx");
                }
            }
        }
    }
}
3Ô∏è‚É£ View (Views/Order/Index.cshtml)
html
Copy code
@model List<YourNamespace.Models.Order>

<!DOCTYPE html>
<html>
<head>
    <title>Order Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="container mt-4">
        <h2>Order Management</h2>
        
        <button id="exportExcel" class="btn btn-success mb-3">Export to Excel</button>

        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Customer</th>
                    <th>Status</th>
                    <th>Payment Mode</th>
                    <th>Rating</th>
                    <th>Total Amount</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.Date.ToString("yyyy-MM-dd")</td>
                        <td>@order.Customer</td>
                        <td>@order.Status</td>
                        <td>@order.PaymentMode</td>
                        <td>
                            @for (int i = 0; i < order.Rating; i++)
                            {
                                <span style="color: gold;">‚òÖ</span>
                            }
                        </td>
                        <td>$@order.TotalAmount</td>
                        <td>
                            <button class="btn btn-primary download-pdf" data-id="@order.Id">Download PDF</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script src="~/js/order.js"></script>
</body>
</html>
4Ô∏è‚É£ JavaScript (wwwroot/js/order.js)
js
Copy code
$(document).ready(function () {
    // Download PDF for a specific order
    $(".download-pdf").click(function () {
        var orderId = $(this).data("id");
        window.location.href = "/Order/DownloadPDF?id=" + orderId;
    });

    // Export all orders to Excel
    $("#exportExcel").click(function () {
        window.location.href = "/Order/ExportToExcel";
    });
});
üî• Features 
