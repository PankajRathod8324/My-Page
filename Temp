d[Authorize(Policy = "MenuEditPolicy")]
[HttpPost]
public IActionResult AddMenuItem([FromBody] JsonObject menuItemdata)
{
    try
    {
        // Convert JsonObject to string and deserialize into the ViewModel
        string jsonString = menuItemdata.ToJsonString(); // Correct way to get JSON string
        var menuCategoryVM = JsonConvert.DeserializeObject<MenuCategoryVM>(jsonString);

        if (menuCategoryVM == null)
        {
            return BadRequest("Invalid JSON format. Could not parse data.");
        }

        Console.WriteLine($"Received Item Name: {menuCategoryVM.ItemName}");
        Console.WriteLine($"Received Modifier Groups: {string.Join(",", menuCategoryVM.ModifierGroupIds)}");

        // Step 1: Save Menu Item
        var menuitem = new MenuItem
        {
            CategoryId = menuCategoryVM.CategoryId,
            ItemName = menuCategoryVM.ItemName,
            ItemtypeId = menuCategoryVM.ItemtypeId,
            Rate = menuCategoryVM.Rate,
            Quantity = menuCategoryVM.Quantity,
            UnitId = menuCategoryVM.UnitId,
            IsAvailable = menuCategoryVM.IsAvailable,
            TaxDefault = menuCategoryVM.TaxDefault,
            TaxPercentage = menuCategoryVM.TaxPercentage,
            ShortCode = menuCategoryVM.ShortCode,
            Description = menuCategoryVM.Description
        };

        _menuService.AddMenuItem(menuitem);

        // Step 2: Save Modifier Groups (if any)
        if (menuCategoryVM.ModifierGroupIds != null && menuCategoryVM.ModifierGroupIds.Any())
        {
            foreach (var modifierGroup in menuCategoryVM.ModifierGroupIds)
            {
                var menuitemmodifier = new ItemModifierGroup
                {
                    ItemId = menuitem.ItemId, // Link to menu item
                    ModifierGroupId = modifierGroup.ModifierGroupId,
                    MinSelection = modifierGroup.MinSelection,
                    MaxSelection = modifierGroup.MaxSelection
                };

                _menuService.AddMenuItemModifierGroup(menuitemmodifier);
            }
        }

        TempData["Message"] = "Menu item added successfully!";
        TempData["MessageType"] = "success";

        return RedirectToAction("MenuModifier", "Menu");
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
        return BadRequest($"Error: {ex.Message}");
    }
}
