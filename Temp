public List<OrderVM> GetOrderCategoryItem(int categoryId, string? status)
{
    var orders = _repository.GetOrdersWithRelatedData();

    var filteredOrders = orders
        .Where(o => categoryId == 0 || o.OrderItems.Any(oi =>
            oi.CategoryId == categoryId &&
            oi.ItemId.HasValue &&
            oi.MenuItem != null &&
            oi.MenuItem.CategoryId == categoryId))
        .ToList();

    var orderVMs = filteredOrders.Select(o => new OrderVM
    {
        OrderId = o.OrderId,
        OccupiedTime = DateTime.UtcNow - o.CreatedAt,
        OrderInstruction = o.OrderInstructions,
        OrderItems = o.OrderItems
            .Where(oi => oi.ItemId.HasValue &&
                ((status == "In Progress" && (oi.Quantity - oi.Readyitemquantity) > 0) ||
                 (status != "In Progress" && oi.Readyitemquantity > 0)))
            .Select(oi => new OrderItemVM
            {
                ItemId = oi.ItemId.Value,
                ItemName = oi.MenuItem?.ItemName ?? "Unknown",
                Price = oi.Rate,
                Quantity = status == "In Progress" ? oi.Quantity - oi.Readyitemquantity : oi.Readyitemquantity,
                ItemInstructions = oi.ItemInstructions,
                Status = status,
                Modifiers = oi.OrderModifiers.Select(om => new OrderModifierVM
                {
                    ModifierId = om.ModifierId ?? 0,
                    ModifierName = om.MenuModifier?.ModifierName ?? "Unknown",
                    ModifierRate = om.Rate,
                    Quantity = 1
                }).ToList()
            }).ToList(),
        CustomerTables = o.Customer.CustomerTables
            .Where(ct => ct.Isactive)
            .Select(ct => new CustomerTableVM
            {
                TableId = ct.TableId ?? 0,
                TableName = ct.Table?.TableName ?? "No Table",
                SectionName = ct.Table?.Section?.SectionName ?? "No Section"
            }).ToList()
    })
    .Where(vm => vm.OrderItems.Any())
    .ToList();

    return orderVMs;
}
public List<Order> GetOrdersWithRelatedData()
{
    return _context.Orders
        .Include(o => o.OrderItems)
            .ThenInclude(oi => oi.OrderModifiers)
        .Include(o => o.OrderItems)
            .ThenInclude(oi => oi.MenuItem)
        .Include(o => o.Customer)
            .ThenInclude(c => c.CustomerTables.Where(ct => ct.Isactive))
        .ThenInclude(ct => ct.Table)
            .ThenInclude(t => t.Section)
        .Where(o => o.OrderStatusId != 4 && o.OrderStatusId != 3)
        .ToList();
}
