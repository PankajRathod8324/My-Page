CREATE OR REPLACE FUNCTION get_order_section_json()
RETURNS JSON
AS $$
DECLARE
    result JSON;
BEGIN
    -- Step 1: Create temp table
    CREATE TEMP TABLE temp_order_section (
        section_id INT,
        section_name TEXT,
        table_id INT,
        table_name TEXT,
        status_name TEXT,
        capacity INT,
        customer_id INT,
        order_id INT,
        total_amount NUMERIC,
        created_at TIMESTAMP
    ) ON COMMIT DROP;

    -- Step 2: Insert required joined and filtered data
    INSERT INTO temp_order_section
    SELECT
        s."SectionId",
        s."SectionName",
        t."TableId",
        t."TableName",
        st."StatusName",
        t."Capacity",
        o."CustomerId",
        o."OrderId",
        o."TotalAmount",
        o."CreatedAt"
    FROM "Sections" s
    JOIN "Tables" t ON t."SectionId" = s."SectionId"
    JOIN "Statuses" st ON st."StatusId" = t."StatusId"
    LEFT JOIN "CustomerTables" ct ON ct."TableId" = t."TableId" AND ct."IsActive" = true
    LEFT JOIN "Orders" o ON o."CustomerId" = ct."CustomerId" AND o."OrderStatusId" = 6;

    -- Step 3: Convert to JSON
    SELECT json_agg(temp_order_section) INTO result
    FROM temp_order_section;

    -- Step 4: Return JSON
    RETURN result;
END;
$$ LANGUAGE plpgsql;
var jsonResult = _context.Database
    .SqlQueryRaw<string>("SELECT get_order_section_json()")
    .FirstOrDefault();
