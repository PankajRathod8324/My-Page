using Microsoft.AspNetCore.Mvc;
using Muonroi.HtmlToPdf;
using System.IO;
using System.Text;

public class OrderController : Controller
{
    public IActionResult GeneratePDF(int orderId)
    {
        // ✅ Load the Razor View as HTML (you need a method to do this)
        string htmlContent = RenderRazorViewToString("OrderPDF", orderId);

        if (string.IsNullOrEmpty(htmlContent))
        {
            return Content("Error: Razor view rendering returned null.");
        }

        // ✅ Convert HTML to PDF using Muonroi.HtmlToPdf
        var pdfBytes = PdfGenerator.ConvertHtmlToPdf(htmlContent);

        // ✅ Save PDF file in wwwroot/GeneratedPDFs
        string folderPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "GeneratedPDFs");
        Directory.CreateDirectory(folderPath); // Ensure directory exists
        string filePath = Path.Combine(folderPath, $"Order_{orderId}.pdf");

        System.IO.File.WriteAllBytes(filePath, pdfBytes);

        // ✅ Return PDF file for download
        return File(pdfBytes, "application/pdf", $"Order_{orderId}.pdf");
    }

    // ✅ Helper method to render Razor view as HTML string
    private string RenderRazorViewToString(string viewName, object model)
    {
        ViewData.Model = model;
        using (var writer = new StringWriter())
        {
            var viewResult = ViewEngine.FindView(ControllerContext, viewName, false);
            var viewContext = new ViewContext(ControllerContext, viewResult.View, ViewData, TempData, writer, new HtmlHelperOptions());
            viewResult.View.RenderAsync(viewContext);
            return writer.ToString();
        }
    }
}
