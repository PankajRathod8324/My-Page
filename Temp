public IActionResult AddMenuItem([FromBody] JsonObject menuItemdata)
{
    try
    {
        if (menuItemdata == null)
        {
            return BadRequest("Invalid JSON format. Could not parse data.");
        }

        Console.WriteLine("Raw JSON received: " + menuItemdata.ToString());

        // Extract individual values
        var itemName = menuItemdata["ItemName"]?.ToString();
        var categoryId = menuItemdata["CategoryId"];
        var rate = menuItemdata["Rate"];
        var quantity = menuItemdata["Quantity"];
        var unitId = menuItemdata["UnitId"];
        var isAvailable = menuItemdata["IsAvailable"];
        
        // Deserialize Modifier Groups JSON array
        List<ItemModifierGroup> modifierGroups = JsonConvert.DeserializeObject<List<ItemModifierGroup>>(menuItemdata["ModifierGroupIdForAdd"].ToString());

        Console.WriteLine($"Received Item Name: {itemName}");
        Console.WriteLine($"Modifier Groups: {string.Join(",", modifierGroups.Select(m => m.ModifierGroupId))}");

        // Step 1: Save Menu Item
        var menuitem = new MenuItem
        {
            CategoryId = (int?)categoryId,
            ItemName = itemName,
            Rate = (decimal)rate,
            Quantity = (int)quantity,
            UnitId = (int?)unitId,
            IsAvailable = (bool?)isAvailable
        };

        _menuService.AddMenuItem(menuitem);

        // Step 2: Save Multiple Modifier Groups
        if (modifierGroups != null && modifierGroups.Any())
        {
            foreach (var modifierGroup in modifierGroups)
            {
                var menuitemmodifier = new ItemModifierGroup
                {
                    ItemId = menuitem.ItemId,
                    ModifierGroupId = modifierGroup.ModifierGroupId,
                    MinSelection = modifierGroup.MinSelection,
                    MaxSelection = modifierGroup.MaxSelection
                };

                _menuService.AddMenuItemModifierGroup(menuitemmodifier);
            }
        }

        return Json(new { success = true, message = "Menu Item Added Successfully!" });
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
        return BadRequest($"Error: {ex.Message}");
    }
}
