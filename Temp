using ClosedXML.Excel;

// Create workbook and worksheet
var workbook = new XLWorkbook();
var worksheet = workbook.Worksheets.Add("Orders");

// Header Styling
var headerRow = worksheet.Range("A11:P11");
headerRow.Style.Font.Bold = true;
headerRow.Style.Fill.BackgroundColor = XLColor.Blue;
headerRow.Style.Font.FontColor = XLColor.White;
headerRow.Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Center;
headerRow.Style.Alignment.Vertical = XLAlignmentVerticalValues.Center;

// Column Headers
worksheet.Cell(11, 1).Value = "Order ID";
worksheet.Range("B11:D11").Merge().Value = "Date";
worksheet.Range("E11:G11").Merge().Value = "Customer";
worksheet.Range("H11:J11").Merge().Value = "Status";
worksheet.Range("K11:L11").Merge().Value = "Payment Mode";
worksheet.Range("M11:N11").Merge().Value = "Rating";
worksheet.Range("O11:P11").Merge().Value = "Total Amount";

// Apply Borders to Headers
headerRow.Style.Border.OutsideBorder = XLBorderStyleValues.Thick;
headerRow.Style.Border.InsideBorder = XLBorderStyleValues.Thin;

int row = 12; // Start writing data from row 12
foreach (var order in orders)
{
    worksheet.Cell(row, 1).Value = order.OrderId;
    worksheet.Range("B" + row + ":D" + row).Merge().Value = order.Date.ToString("yyyy-MM-dd");
    worksheet.Range("E" + row + ":G" + row).Merge().Value = order.CustomerId.HasValue ? _orderService.GetCustomerById(order.CustomerId.Value) : "No Customer";
    worksheet.Range("H" + row + ":J" + row).Merge().Value = order.OrderStatusId.HasValue ? _orderService.GetOrderStatusById(order.OrderStatusId.Value) : "No Order Status";
    worksheet.Range("K" + row + ":L" + row).Merge().Value = order.PaymentModeId.HasValue ? _orderService.GetPaymentModeById(order.PaymentModeId.Value) : "No Payment Mode";
    worksheet.Range("M" + row + ":N" + row).Merge().Value = order.ReviewId.HasValue ? _orderService.GetReviewById(order.ReviewId.Value) : 0;
    worksheet.Range("O" + row + ":P" + row).Merge().Value = order.TotalAmount;

    // Apply styles to data rows
    var dataRow = worksheet.Range("A" + row + ":P" + row);
    dataRow.Style.Font.FontName = "Arial";
    dataRow.Style.Font.FontSize = 12;
    dataRow.Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Center;
    dataRow.Style.Alignment.Vertical = XLAlignmentVerticalValues.Center;
    dataRow.Style.Fill.BackgroundColor = XLColor.LightGray;
    dataRow.Style.Border.OutsideBorder = XLBorderStyleValues.Thin;
    dataRow.Style.Border.InsideBorder = XLBorderStyleValues.Thin;

    row++;
}

// Adjust column widths
worksheet.Columns().AdjustToContents();

// Save to memory stream
using (var stream = new MemoryStream())
{
    workbook.SaveAs(stream);
    var content = stream.ToArray();
    return File(content, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "Orders.xlsx");
}
