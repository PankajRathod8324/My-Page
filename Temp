CREATE OR REPLACE FUNCTION get_order_category_items(
    p_category_id INT,
    p_status TEXT
)
RETURNS TABLE (
    order_id INT,
    occupied_time INTERVAL,
    order_instruction TEXT,
    item_id INT,
    item_name TEXT,
    price NUMERIC,
    quantity INT,
    item_instructions TEXT,
    item_status TEXT,
    modifier_id INT,
    modifier_name TEXT,
    modifier_rate NUMERIC,
    table_id INT,
    table_name TEXT,
    section_name TEXT
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        o.order_id,
        now() - o.created_at AS occupied_time,
        o.order_instructions,
        oi.item_id,
        mi.item_name,
        oi.rate AS price,
        CASE 
            WHEN p_status = 'In Progress' THEN (oi.quantity - oi.readyitemquantity)
            ELSE oi.readyitemquantity
        END AS quantity,
        oi.item_instructions,
        p_status AS item_status,
        om.modifier_id,
        mm.modifier_name,
        om.rate AS modifier_rate,
        ct.table_id,
        t.table_name,
        s.section_name

    FROM orders o
    JOIN orderitems oi ON oi.order_id = o.order_id
    JOIN menuitems mi ON mi.item_id = oi.item_id
    LEFT JOIN ordermodifiers om ON om.orderitem_id = oi.orderitem_id
    LEFT JOIN menumodifiers mm ON mm.modifier_id = om.modifier_id
    LEFT JOIN customertables ct ON ct.customer_id = o.customer_id AND ct.isactive = true
    LEFT JOIN tables t ON t.table_id = ct.table_id
    LEFT JOIN sections s ON s.section_id = t.section_id

    WHERE o.order_status_id NOT IN (3, 4)
      AND oi.item_id IS NOT NULL
      AND (
          (p_category_id = 0 AND mi.item_id IS NOT NULL) OR
          (p_category_id != 0 AND mi.category_id = p_category_id)
      )
      AND (
          (p_status = 'In Progress' AND (oi.quantity - oi.readyitemquantity) > 0) OR
          (p_status != 'In Progress' AND oi.readyitemquantity > 0)
      );

END;
$$ LANGUAGE plpgsql;
