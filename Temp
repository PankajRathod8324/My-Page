
    public List<OrderVM> GetOrderCategoryItem(int categoryId, string? status)
    {
        var ordersQuery = _context.Orders.AsQueryable();

        if (categoryId != 0)
        {
            ordersQuery = ordersQuery.Where(o => _context.OrderItems.Any(oi => oi.OrderId == o.OrderId && o.OrderStatusId != 4 && o.OrderStatusId != 3 && oi.CategoryId == categoryId && oi.ItemId.HasValue
                                                                               && _context.MenuItems.Any(mi => mi.ItemId == oi.ItemId
                                                                                                               && mi.CategoryId == categoryId)));
        }
        else
        {
            ordersQuery = ordersQuery.Where(o => _context.OrderItems.Any(oi => oi.OrderId == o.OrderId && o.OrderStatusId != 4 && o.OrderStatusId != 3 && oi.ItemId.HasValue
                                                                               && _context.MenuItems.Any(mi => mi.ItemId == oi.ItemId)));
        }


        var orders = categoryId != 0 ? ordersQuery
            .Include(o => o.OrderItems
                .Where(oi => oi.CategoryId == categoryId))
            .ThenInclude(oi => oi.OrderModifiers)
            .ToList() : ordersQuery
            .Include(o => o.OrderItems)
            .ThenInclude(oi => oi.OrderModifiers)
            .ToList();


        var orderVm = orders.Select(o => new OrderVM
        {
            OrderId = o.OrderId,
            OccupiedTime = DateTime.UtcNow - o.CreatedAt,
            OrderInstruction = o.OrderInstructions,
            OrderItems = o.OrderItems
                .Where(oi => oi.ItemId.HasValue && ((status == "In Progress" && (oi.Quantity - oi.Readyitemquantity) > 0) ||
                                  (status != "In Progress" && oi.Readyitemquantity > 0)) && _context.MenuItems.Any(mi => mi.ItemId == oi.ItemId))
                .SelectMany(oi => new List<OrderItemVM>
                {
                new OrderItemVM
                {
                    ItemId = (int)oi.ItemId,
                    ItemName = _context.MenuItems.Where(mi => mi.ItemId == oi.ItemId).Select(mi => mi.ItemName).FirstOrDefault(),
                    Price = oi.Rate,
                    Quantity = (status == "In Progress") ? oi.Quantity - oi.Readyitemquantity : oi.Readyitemquantity,
                    ItemInstructions = oi.ItemInstructions,
                    Status = status,
                    Modifiers = oi.OrderModifiers.Select(om => new OrderModifierVM
                    {
                        ModifierId = (int)om.ModifierId,
                        ModifierName = _context.MenuModifiers.Where(mod => mod.ModifierId == om.ModifierId).Select(mod => mod.ModifierName).FirstOrDefault(),
                        ModifierRate = om.Rate,
                        Quantity = 1
                    }).ToList()
                }

                }).ToList(),
            CustomerTables = _context.CustomerTables.Where(r => r.CustomerId == o.CustomerId && r.IsActive == true).Select(ot => new CustomerTableVM
            {
                TableId = (int)ot.TableId,
                TableName = ot.TableId.HasValue ? (from table in _context.Tables
                                                   where table.TableId == ot.TableId
                                                   select table.TableName).FirstOrDefault() : "No Table",
                SectionName = ot.TableId.HasValue ? (from table in _context.Tables
                                                     join section in _context.Sections on table.SectionId equals section.SectionId
                                                     where table.TableId == ot.TableId
                                                     select section.SectionName).FirstOrDefault() : "No Section"
            }).ToList(),

        }).Where(o => o.OrderItems.Count > 0).ToList();

        return orderVm;
    }
