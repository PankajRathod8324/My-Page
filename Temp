[HttpPost]
public IActionResult AddMenuItem([FromBody] JsonObject menuItemData)
{
    try
    {
        if (menuItemData == null)
        {
            return BadRequest("Invalid JSON format. Could not parse data.");
        }

        Console.WriteLine("Raw JSON received: " + menuItemData.ToString());

        // Extract individual values safely
        string itemName = menuItemData["ItemName"]?.ToString();
        int categoryId = menuItemData["CategoryId"] != null ? Convert.ToInt32(menuItemData["CategoryId"].ToString()) : 0;
        decimal rate = menuItemData["Rate"] != null ? Convert.ToDecimal(menuItemData["Rate"].ToString()) : 0;
        int quantity = menuItemData["Quantity"] != null ? Convert.ToInt32(menuItemData["Quantity"].ToString()) : 0;
        int unitId = menuItemData["UnitId"] != null ? Convert.ToInt32(menuItemData["UnitId"].ToString()) : 0;
        bool isAvailable = menuItemData["IsAvailable"] != null ? Convert.ToBoolean(menuItemData["IsAvailable"].ToString()) : false;

        // Parse Modifier Groups array safely
        List<ItemModifierGroup> modifierGroups = new List<ItemModifierGroup>();
        if (menuItemData.ContainsKey("ModifierGroups") && menuItemData["ModifierGroups"] != null)
        {
            modifierGroups = JsonConvert.DeserializeObject<List<ItemModifierGroup>>(menuItemData["ModifierGroups"].ToString());
        }

        Console.WriteLine($"Received Item Name: {itemName}");
        Console.WriteLine($"Modifier Groups: {string.Join(",", modifierGroups.Select(m => m.ModifierGroupId))}");

        // Step 1: Save Menu Item
        var menuitem = new MenuItem
        {
            CategoryId = categoryId,
            ItemName = itemName,
            Rate = rate,
            Quantity = quantity,
            UnitId = unitId,
            IsAvailable = isAvailable
        };

        _menuService.AddMenuItem(menuitem);

        // Step 2: Save Modifier Groups (if present)
        if (modifierGroups.Any())
        {
            foreach (var modifierGroup in modifierGroups)
            {
                var menuitemmodifier = new ItemModifierGroup
                {
                    ItemId = menuitem.ItemId,
                    ModifierGroupId = modifierGroup.ModifierGroupId,
                    MinSelection = modifierGroup.MinSelection,
                    MaxSelection = modifierGroup.MaxSelection
                };

                _menuService.AddMenuItemModifierGroup(menuitemmodifier);
            }
        }

        return Json(new { success = true, message = "Menu Item Added Successfully!" });
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
        return BadRequest($"Error: {ex.Message}");
    }
}
