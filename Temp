CREATE OR REPLACE FUNCTION get_order_list(p_category_id INT)
RETURNS TABLE (
    OrderId INT,
    OccupiedTime TIMESTAMP,
    OrderInstruction TEXT,
    ItemId INT,
    ItemName TEXT,
    Rate NUMERIC,
    Quantity NUMERIC,
    ItemInstructions TEXT,
    ItemStatus TEXT,
    ModifierId INT,
    ModifierName TEXT,
    ModifierRate NUMERIC,
    ModifierQuantity INT,
    TableId INT,
    TableName TEXT,
    SectionName TEXT
) 
LANGUAGE plpgsql
AS $$
BEGIN
    -- Return all orders (status not 3 or 4) with their items, modifiers, and tables
    RETURN QUERY
    SELECT
        om.OrderId,
        om.OccupiedTime,
        om.OrderInstruction,
        od.ItemId,
        od.ItemName,
        od.Rate,
        -- Compute Quantity based on status logic
        CASE 
            WHEN od.Status = 'In Progress' THEN (od.Quantity - od.ReadyItemQuantity)
            ELSE od.ReadyItemQuantity
        END AS Quantity,
        od.ItemInstructions,
        od.Status,
        m.ModifierId,
        m.ModifierName,
        m.ModifierRate,
        1 AS ModifierQuantity,
        ct.TableId,
        ct.TableName,
        s.SectionName
    FROM OrderMaster om
    JOIN OrderDetail od ON om.OrderId = od.OrderId
    LEFT JOIN OrderDetailModifier odm ON od.OrderDetailId = odm.OrderDetailId
    LEFT JOIN Modifier m ON odm.ModifierId = m.ModifierId
    LEFT JOIN CustomerOrderTables cot ON om.OrderId = cot.OrderId
    LEFT JOIN CustomerTable ct ON cot.TableId = ct.TableId
    LEFT JOIN Section s ON ct.SectionId = s.SectionId
    WHERE 
        om.OrderStatusId NOT IN (3,4)                              -- exclude unwanted order statuses
        AND od.ItemId IS NOT NULL                                  -- skip null items
        AND (p_category_id = 0 OR od.CategoryId = p_category_id)   -- optional category filter
        AND (
            (od.Status = 'In Progress' AND (od.Quantity - od.ReadyItemQuantity) > 0)
            OR (od.Status <> 'In Progress' AND od.ReadyItemQuantity > 0)
        );
END;
$$;
