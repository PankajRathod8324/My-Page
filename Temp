-- PROCEDURE: public.get_kot(integer, text)

-- DROP PROCEDURE IF EXISTS public.get_kot(integer, text);

CREATE OR REPLACE PROCEDURE public.get_kot(
	IN p_category_id integer,
	IN p_status text,)
LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
    DROP TABLE IF EXISTS temp_order_vm_data;

    CREATE TEMP TABLE temp_order_vm_data (
        orderid INT,
        occupiedtime INTERVAL,
        orderinstructions TEXT,
		orderitems JSONB,
		modifiers JSONB,
		customertables JSONB,
        -- itemid INT,
        -- itemname TEXT,
        -- rate NUMERIC,
        -- quantity INT,
        -- iteminstructions TEXT,
        -- status TEXT,
        -- modifierid INT,
        -- modifiername TEXT,
        -- modifierrate NUMERIC,
        -- tableid INT,
        -- tablename TEXT,
        -- sectionname TEXT
    );

    INSERT INTO temp_order_vm_data(
        orderid,
        occupiedtime,
        orderinstructions,
		
        -- itemid,
        -- itemname,
        -- rate,
        -- quantity,
        -- iteminstructions,
        -- status,
        -- modifierid,
        -- modifiername,
        -- modifierrate,
        -- tableid,
        -- tablename,
        -- sectionname
    )
    SELECT
        o.order_id,
        NOW() - o.created_at AS occupiedtime,
        o.order_instructions,
        oi.item_id,
        mi.item_name,
        oi.rate,
        CASE
            WHEN p_status = 'In Progress' THEN oi.quantity - oi.readyitemquantity
            ELSE oi.readyitemquantity
        END AS quantity,
        oi.item_instructions,
        p_status,
          om.modifier_id,
            mm.modifier_name,
            om.rate AS modifier_rate,
        ct.table_id,
        t.table_name,
        s.section_name
    FROM orders o
    JOIN order_items oi ON o.order_id = oi.order_id
    JOIN menu_items mi ON oi.item_id = mi.item_id
		 LEFT JOIN order_modifiers om ON oi.order_item_id = om.order_item_id
        LEFT JOIN menu_modifiers mm ON om.modifier_id = mm.modifier_id
    LEFT JOIN customers c ON o.customer_id = c.customer_id
    LEFT JOIN customer_tables ct ON c.customer_id = ct.customer_id AND ct.isactive = TRUE
    LEFT JOIN tables t ON ct.table_id = t.table_id
    LEFT JOIN sections s ON t.section_id = s.section_id
    WHERE o.order_status_id NOT IN (3, 4)
      AND oi.item_id IS NOT NULL
      AND (p_category_id = 0 OR (oi.category_id = p_category_id AND mi.category_id = p_category_id))
      AND (
        (p_status = 'In Progress' AND (oi.quantity - oi.readyitemquantity) > 0)
        OR (p_status != 'In Progress' AND oi.readyitemquantity > 0)
      );

   

    -- Final result selection
    -- Since this is a procedure, to return the result, you might need to select it from client
    -- Or convert this to a FUNCTION returning SETOF temp_order_vm_data type.
    -- Here, just SELECT:
    -- Note: ISNULL replaced by COALESCE for PostgreSQL
    -- Remove 'ORDER BY' from procedure; clients should order results
    -- But keeping it here as per your code:

    -- Use EXECUTE for dynamic queries in procedures if needed, but this is static so SELECT works:
    PERFORM * FROM temp_order_vm_data;  -- just to avoid error, actual output depends on client

END;
$BODY$;
-- ALTER PROCEDURE public.get_kot(integer, text)
--     OWNER TO postgres;
