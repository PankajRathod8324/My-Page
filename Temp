    public List<OrderVM> GetOrderCategoryItem(int categoryId, string? status)
    {
        var orders = _accountmanagerorderapprepository.GetOrdersWithRelatedData();

        var filteredOrders = orders
            .Where(o => categoryId == 0 || o.OrderItems.Any(oi =>
                oi.CategoryId == categoryId &&
                oi.ItemId.HasValue &&
                oi.Item != null &&
                oi.Item.CategoryId == categoryId))
            .ToList();

        var orderVMs = filteredOrders.Select(o => new OrderVM
        {
            OrderId = o.OrderId,
            OccupiedTime = DateTime.UtcNow - o.CreatedAt,
            OrderInstruction = o.OrderInstructions,
            OrderItems = o.OrderItems
                .Where(oi => oi.ItemId.HasValue && (categoryId != 0 ? oi.CategoryId == categoryId : true) &&
                    ((status == "In Progress" && (oi.Quantity - oi.Readyitemquantity) > 0) ||
                     (status != "In Progress" && oi.Readyitemquantity > 0)))
                .Select(oi => new OrderItemVM
                {
                    ItemId = oi.ItemId.Value,
                    ItemName = oi.Item?.ItemName ?? "Unknown",
                    Price = oi.Rate,
                    Quantity = status == "In Progress" ? oi.Quantity - oi.Readyitemquantity : oi.Readyitemquantity,
                    ItemInstructions = oi.ItemInstructions,
                    Status = status,
                    Modifiers = oi.OrderModifiers.Select(om => new OrderModifierVM
                    {
                        ModifierId = om.ModifierId ?? 0,
                        ModifierName = om.Modifier?.ModifierName ?? "Unknown",
                        ModifierRate = om.Rate,
                        Quantity = 1
                    }).ToList()
                }).ToList(),
            CustomerTables = o.Customer.CustomerTables
                .Where(ct => (bool)ct.Isactive)
                .Select(ct => new CustomerTableVM
                {
                    TableId = ct.TableId ?? 0,
                    TableName = ct.Table?.TableName ?? "No Table",
                    SectionName = ct.Table?.Section?.SectionName ?? "No Section"
                }).ToList()
        })
        .Where(vm => vm.OrderItems.Any())
        .ToList();

        return orderVMs;
    }

here is my service and these is my repo    public List<Order> GetOrdersWithRelatedData()
    {
        return _context.Orders
            .Include(o => o.OrderItems)
                .ThenInclude(oi => oi.OrderModifiers)
            .Include(o => o.OrderItems)
                .ThenInclude(oi => oi.Item)
            .Include(o => o.Customer)
                .ThenInclude(c => c.CustomerTables.Where(ct => (bool)ct.Isactive))
            .ThenInclude(ct => ct.Table)
                .ThenInclude(t => t.Section)
            .Where(o => o.OrderStatusId != 4 && o.OrderStatusId != 3)
            .ToList();
    } and i want that in service only want that mapping of in ordervm and repo i just want that that call to stored processor that is made in pgadmin postgreysql and make sure that in repo there should be no viewmodel ok and noew make that sercie\ve logic and the all join in stored processor and give me service, repo and stored processor file and make wit h zero error pls can run on postgreysql without any error 
