CREATE OR REPLACE PROCEDURE get_kot(
    p_category_id INT,
    p_status TEXT
)
LANGUAGE plpgsql
AS $$
BEGIN
    DROP TABLE IF EXISTS temp_order_vm_data;

    CREATE TEMP TABLE temp_order_vm_data (
        orderid INT,
        occupiedtime TIMESTAMP,
        orderinstructions TEXT,
        itemid INT,
        itemname TEXT,
        rate NUMERIC,
        quantity INT,
        iteminstructions TEXT,
        status TEXT,
        modifierid INT,
        modifiername TEXT,
        modifierrate NUMERIC,
        tableid INT,
        tablename TEXT,
        sectionname TEXT
    );

    INSERT INTO temp_order_vm_data(orderid ,
        occupiedtime,
        orderinstructions ,
        itemid ,
        itemname ,
        rate ,
        quantity ,
        iteminstructions ,
        status ,
        tableid ,
        tablename ,
        sectionname )
    SELECT
        o.order_id,
        o.created_at,
        o.order_instructions,
        oi.item_id,
        mi.item_name,
        oi.rate,
        CASE 
            WHEN p_status = 'In Progress' THEN oi.quantity - oi.readyitemquantity
            ELSE oi.readyitemquantity
        END AS quantity,
        oi.item_instructions,
        p_status,
        ct.table_id,
        t.table_name,
        s.section_name
    FROM orders o
    JOIN order_items oi ON o.order_id = oi.order_id
    JOIN menu_items mi ON oi.item_id = mi.item_id
    LEFT JOIN customers c ON o.customer_id = c.customer_id
    LEFT JOIN customer_tables ct ON c.customer_id = ct.customer_id AND ct.isactive = TRUE
    LEFT JOIN tables t ON ct.table_id = t.table_id
    LEFT JOIN sections s ON t.section_id = s.section_id
    WHERE o.order_status_id NOT IN (3, 4)
      AND oi.item_id IS NOT NULL
      AND (
            p_category_id = 0 OR (
                oi.category_id = p_category_id AND 
                mi.category_id = p_category_id
            )
          )
      AND (
            (p_status = 'In Progress' AND (oi.quantity - oi.readyitemquantity) > 0)
            OR (p_status != 'In Progress' AND oi.readyitemquantity > 0)
          );

	 INSERT INTO temp_order_vm_data(orderid ,
        occupiedtime,
        orderinstructions ,
        itemid ,
        itemname ,
        rate ,
        quantity ,
        iteminstructions ,
        status ,
		   modifierid ,
        modifiername ,
        modifierrate ,
        tableid ,
        tablename ,
        sectionname )
    SELECT
        o.order_id,
        o.created_at,
        o.order_instructions,
        oi.item_id,
		
        mi.item_name,
		  oi.rate,
		
        
        CASE 
            WHEN p_status = 'In Progress' THEN oi.quantity - oi.readyitemquantity
            ELSE oi.readyitemquantity
        END AS quantity,
		
        oi.item_instructions,
        p_status,
		   om.modifier_id,
		 mm.modifier_name,
		 mm.modifier_rate,
        ct.table_id,
        t.table_name,
        s.section_name
    FROM temp_order_vm_data  o
	JOIN order_items oi ON o.order_id = oi.order_id
    JOIN order_modifiers om ON o.order_id = om.order_id
    JOIN menu_modifiers mm ON om.modifier_id = mm.modifier_id
    WHERE o.modifier_id IS NULL;

	  DELETE FROM temp_order_vm_data
    WHERE modifier_id IS NULL
    AND EXISTS (
        SELECT 1 FROM temp_order_vm_data r2 
        WHERE r2.orderid =  temp_order_vm_data.orderid 
        AND r2.item_id =  temp_order_vm_data.item_id 
        AND r2.modifierid IS NOT NULL
    );
    
    -- Return final results
    SELECT * FROM temp_order_vm_data
    ORDER BY orderid, itemid, ISNULL(modifierid, 0);
    
END;
$$;
