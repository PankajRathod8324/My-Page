CREATE OR REPLACE PROCEDURE get_kot(
    p_category_id INT,
    p_status TEXT
)
LANGUAGE plpgsql
AS $$
BEGIN
    DROP TABLE IF EXISTS temp_order_vm_data;

    CREATE TEMP TABLE temp_order_vm_data (
        orderid INT,
        occupiedtime TIMESTAMP,
        orderinstructions TEXT,
        itemid INT,
        itemname TEXT,
        rate NUMERIC,
        quantity INT,
        iteminstructions TEXT,
        status TEXT,
        modifierid INT,
        modifiername TEXT,
        modifierrate NUMERIC,
        tableid INT,
        tablename TEXT,
        sectionname TEXT
    );

    -- Insert orders with items (no modifiers yet)
    INSERT INTO temp_order_vm_data(
        orderid,
        occupiedtime,
        orderinstructions,
        itemid,
        itemname,
        rate,
        quantity,
        iteminstructions,
        status,
        modifierid,
        modifiername,
        modifierrate,
        tableid,
        tablename,
        sectionname
    )
    SELECT
        o.order_id,
        o.created_at,
        o.order_instructions,
        oi.item_id,
        mi.item_name,
        oi.rate,
        CASE
            WHEN p_status = 'In Progress' THEN oi.quantity - oi.readyitemquantity
            ELSE oi.readyitemquantity
        END AS quantity,
        oi.item_instructions,
        p_status,
        NULL AS modifierid,
        NULL AS modifiername,
        NULL AS modifierrate,
        ct.table_id,
        t.table_name,
        s.section_name
    FROM orders o
    JOIN order_items oi ON o.order_id = oi.order_id
    JOIN menu_items mi ON oi.item_id = mi.item_id
    LEFT JOIN customers c ON o.customer_id = c.customer_id
    LEFT JOIN customer_tables ct ON c.customer_id = ct.customer_id AND ct.isactive = TRUE
    LEFT JOIN tables t ON ct.table_id = t.table_id
    LEFT JOIN sections s ON t.section_id = s.section_id
    WHERE o.order_status_id NOT IN (3, 4)
      AND oi.item_id IS NOT NULL
      AND (p_category_id = 0 OR (oi.category_id = p_category_id AND mi.category_id = p_category_id))
      AND (
        (p_status = 'In Progress' AND (oi.quantity - oi.readyitemquantity) > 0)
        OR (p_status != 'In Progress' AND oi.readyitemquantity > 0)
      );

    -- Insert modifiers related to the inserted order items
    INSERT INTO temp_order_vm_data(
        orderid,
        occupiedtime,
        orderinstructions,
        itemid,
        itemname,
        rate,
        quantity,
        iteminstructions,
        status,
        modifierid,
        modifiername,
        modifierrate,
        tableid,
        tablename,
        sectionname
    )
    SELECT
        o.orderid,
        o.occupiedtime,
        o.orderinstructions,
        o.itemid,
        o.itemname,
        o.rate,
        o.quantity,
        o.iteminstructions,
        o.status,
        om.modifier_id,
        mm.modifier_name,
        mm.modifier_rate,
        o.tableid,
        o.tablename,
        o.sectionname
    FROM temp_order_vm_data o
    JOIN order_items oi ON o.orderid = oi.order_id AND o.itemid = oi.item_id
    JOIN order_modifiers om ON oi.order_item_id = om.order_item_id
    JOIN menu_modifiers mm ON om.modifier_id = mm.modifier_id
    WHERE o.modifierid IS NULL;

    -- Delete item rows where modifiers exist (to avoid duplication)
    DELETE FROM temp_order_vm_data t1
    WHERE t1.modifierid IS NULL
      AND EXISTS (
          SELECT 1 FROM temp_order_vm_data t2
          WHERE t2.orderid = t1.orderid
            AND t2.itemid = t1.itemid
            AND t2.modifierid IS NOT NULL
      );

    -- Final result selection
    -- Since this is a procedure, to return the result, you might need to select it from client
    -- Or convert this to a FUNCTION returning SETOF temp_order_vm_data type.
    -- Here, just SELECT:
    -- Note: ISNULL replaced by COALESCE for PostgreSQL
    -- Remove 'ORDER BY' from procedure; clients should order results
    -- But keeping it here as per your code:

    -- Use EXECUTE for dynamic queries in procedures if needed, but this is static so SELECT works:
    PERFORM * FROM temp_order_vm_data;  -- just to avoid error, actual output depends on client

END;
$$;
