@using X.PagedList.Mvc.Core
@model DAL.ViewModel.MenuCategoryVM

@{
    ViewData["Title"] = "Menu Item Page";
    if (TempData["Message"] != null)
    {
        <div class="alert alert-@TempData["MessageType"]">@TempData["Message"]</div>
    }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu Page</title>
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/media.css">
    <link rel='stylesheet' href='https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body class="bg-white">
    <!-- Overlay for small screens -->

    <form method="get">
        <div class="row d-flex mb-2 align-item-center justify-content-center ms-0 me-0 rounded">
            <div class="col ">
                <h1 class="">Items </h1>
            </div>
            <div class="col-5 d-flex align-items-center gap-3 justify-content-end pe-0">
                <input class="form-control d-inline w-auto" type="search" name="search"
                    placeholder="Search by Item Name" value="@Context.Request.Query["search"]">
                <select name="filterBy" class="form-select d-inline w-auto">
                    <option value="">All Items</option>
                    <option value="Available"
                        selected="@(Context.Request.Query["filterBy"] == "Available" ? "selected" : null)">
                        Available
                    </option>
                    <option value="Not Available"
                        selected="@(Context.Request.Query["filterBy"] == "Not Available" ? "selected" : null)">
                        Not Available
                    </option>
                </select>
                <select name="pageSize" class="form-select d-inline w-auto" onchange="this.form.submit()">
                    <option value="5" selected="@(Context.Request.Query["pageSize"] == "5" ? "selected" : null)">5
                    </option>
                    <option value="10" selected="@(Context.Request.Query["pageSize"] == "10" ? "selected" : null)">
                        10</option>
                    <option value="15" selected="@(Context.Request.Query["pageSize"] == "15" ? "selected" : null)">
                        15</option>
                </select>
                <button type="submit" class="btn btn-primary">Search</button>
                <button type="button" class="btn btn-outline-primary"> <i class="fa-regular fa-trash-can text-center "
                        data-bs-toggle="modal" data-bs-target="#deleteModal1"></i></button>
                <div class="col-auto text-end">
                    <a data-bs-toggle="modal" data-bs-target="#newitemModal">
                        <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">
                            <i class="fa-solid fa-plus"></i>New Item
                        </button>
                    </a>
                </div>
            </div>
        </div>
    </form>

    <div class="col table-responsive">
        <table id="table" class="table align-middle table-hover bg-white">
            <thead class="bg-light">
                <tr>

                    <th><input type="checkbox" class="me-2" id="selectAll" style=" width: 16px; height: 16px;" /><a
                            asp-action="MenuItem" asp-route-sortBy="@ViewBag.NameSort">Name</a></th>
                    </th>
                    <th>ItemType</th>
                    <th>Rate</th>
                    <th>Quantity</th>
                    <th><a asp-action="MenuItem" asp-route-sortBy="@ViewBag.StatusSort">Available</a></th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var menuitem in Model.menuItems)
                {
                    <tr class="tblclass" data-id="@menuitem.ItemId">
                        <td>
                            <div class="d-flex align-items-center">
                                <input type="checkbox" name="chkItem" class="checkclass" />
                                <img src="~/assest/dining-menu.png" alt="" style="width: 45px; height: 45px"
                                    class="rounded-circle ms-2" />
                                <div class="ms-3">
                                    <p class="text-secondary mb-1">@menuitem.ItemName</p>
                                </div>
                            </div>
                        </td>
                        <td>
                            <img src="~/assest/icons/@(menuitem.ItemtypeId == 1 ? "veg-icon.svg" : "non-veg-icon.svg")"
                                style="width: 20px; height: 20px" class="rounded-circle" />
                        </td>
                        <td>
                            <p class="fw-normal mb-1">@menuitem.Rate</p>
                        </td>
                        <td>
                            <p class="fw-normal mb-1">@menuitem.Quantity</p>
                        </td>
                        <td class="text-center"> <!-- Center the toggle switch -->
                            <div class="form-check form-switch">
                                <input class="form-check-input canView" type="checkbox" id="toggleSwitch"
                                    @(menuitem.IsAvailable ?? false ? "checked" : "")>
                            </div>
                        </td>
                        <td>
                            <i class="fa-solid fa-marker" data-bs-toggle="modal" data-bs-target="#editItemModal"
                                onclick="editItem(@menuitem.ItemId)"></i>
                            <i class="fa-regular fa-trash-can ms-4" data-bs-toggle="modal" data-bs-target="#editItemModal"
                                onclick="editItem(@menuitem.ItemId)"></i>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
    <div>
        @Html.PagedListPager(Model.menuItems, page => Url.Action("MenuItem", new
        {
            search = Context.Request.Query["search"],
                filterBy = Context.Request.Query["filterBy"],
                sortBy = Context.Request.Query["sortBy"],
                pageSize = Context.Request.Query["pageSize"],
                page
                }), new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
    </div>
